{"version":3,"sources":["components/contactList/ContactList.module.css","components/contactForm/form/Form.module.css","components/app/App.module.css","components/filter/Filter.module.css","redux/theme/themeAction.js","redux/contact/contactAction.js","components/contactForm/form/Form.jsx","components/contactForm/ContactForm.jsx","components/filter/Filter.jsx","components/contactList/contactListItem/ContactListItem.jsx","components/contactList/ContactList.jsx","components/app/App.js","redux/contact/contactReducer.js","redux/theme/themeReducer.js","redux/store.js","index.js"],"names":["module","exports","toggleTheme","createAction","theme","isOpen","payload","addContact","name","number","contact","id","uuidv4","deleteContact","filterContact","ContactForm","handleChange","handleSubmit","onSubmit","className","styles","form","label","value","type","placeholder","input","onChange","button","state","target","setState","e","preventDefault","props","this","Form","Component","mapDispatchToProps","contactAction","connect","handleFilterChange","contacts","filter","ContactListItem","listItem","phone","deleteButton","onClick","onDelete","onFilter","toLowerCase","includes","list","map","key","toggle","themeAction","dark","light","Switch","checked","app","length","createReducer","action","combineReducers","themeReducer","store","configureStore","reducer","contactReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbc7a406.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__inAxv\",\"listItem\":\"ContactList_listItem__2wEbh\",\"name\":\"ContactList_name__j6gsq\",\"phone\":\"ContactList_phone__3iJaF\",\"deleteButton\":\"ContactList_deleteButton__1h95m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3GlQN\",\"label\":\"Form_label__PpzEd\",\"input\":\"Form_input__vw-UR\",\"button\":\"Form_button__2Mqzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3f2-0\",\"dark\":\"App_dark__1j32g\",\"light\":\"App_light__1c66z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__24o7q\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst toggleTheme = createAction(\"theme/THEME_TOGGLE\", (theme, isOpen) => ({\r\n  payload: {\r\n    theme: {\r\n      isOpen,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default { toggleTheme };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContact = createAction(\"contact/ADD_CONTACT\", (name, number) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contact/DELETE_CONTACT\");\r\nconst filterContact = createAction(\"contact/FILTER_CONTACT\");\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  filterContact,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Form.module.css\";\r\n\r\nconst ContactForm = ({ handleChange, handleSubmit, name, number }) => {\r\n  return (\r\n    <>\r\n      <h2>Phonebook</h2>\r\n\r\n      <form onSubmit={handleSubmit} className={styles.form}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            value={name}\r\n            type=\"text\"\r\n            placeholder=\"name...\"\r\n            className={styles.input}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            value={number}\r\n            type=\"tel\"\r\n            placeholder=\"phone...\"\r\n            className={styles.input}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactAction from \"../../redux/contact/contactAction\";\r\nimport Form from \"../contactForm/form/Form\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) =>\r\n    this.setState({ [name]: value });\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    name !== \"\" && number !== \"\" && this.props.onSubmit(name, number);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <Form\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n          name={name}\r\n          number={number}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onSubmit: contactAction.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactAction from \"../../redux/contact/contactAction\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ handleFilterChange, value }) => {\r\n  return (\r\n    <>\r\n      <h2>Search</h2>\r\n      <input\r\n        className={styles.filter}\r\n        value={value}\r\n        name=\"filter\"\r\n        type=\"tel\"\r\n        placeholder=\"find contacts by name...\"\r\n        onChange={(e) => handleFilterChange(e.target.value)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  handleFilterChange: contactAction.filterContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport styles from \"../ContactList.module.css\";\r\n\r\nconst ContactListItem = ({ contact, deleteContact }) => {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p className={styles.name}>\r\n        <b>Name:</b>\r\n        {contact.name}\r\n      </p>\r\n      <p className={styles.phone}>\r\n        <b>Phone:</b>\r\n        {contact.number}\r\n      </p>\r\n      <button\r\n        className={styles.deleteButton}\r\n        type=\"button\"\r\n        onClick={() => deleteContact(contact.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport contactAction from \"../../redux/contact/contactAction\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDelete, onFilter }) => {\r\n  return (\r\n    <>\r\n      <h2>Contacts</h2>\r\n      <ul className={styles.list}>\r\n        {contacts.map((contact) => (\r\n          <ContactListItem\r\n            key={contact.id}\r\n            contact={contact}\r\n            deleteContact={() => onDelete(contact.id)}\r\n            filterContact={() => onFilter(contact.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { contacts, filter } = state.contacts;\r\n  const filteredContacts = contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  return {\r\n    contacts: filteredContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onDelete: contactAction.deleteContact,\r\n  onFilter: contactAction.filterContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport themeAction from \"../../redux/theme/themeAction\";\r\n\r\nimport { Switch } from \"@material-ui/core\";\r\nimport ContactForm from \"../contactForm/ContactForm\";\r\nimport Filter from \"../filter/Filter\";\r\nimport ContactList from \"../contactList/ContactList\";\r\nimport styles from \"./App.module.css\";\r\n\r\nconst App = ({ contacts, isOpen, toggle }) => {\r\n  return (\r\n    <>\r\n      <div className={isOpen ? styles.dark : styles.light}>\r\n        <Switch checked={isOpen} onChange={toggle} />\r\n        <div className={styles.app}>\r\n          <ContactForm />\r\n          {contacts.length > 0 && (\r\n            <>\r\n              <Filter />\r\n              <ContactList />\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts, theme }) => {\r\n  return {\r\n    contacts: contacts.contacts,\r\n    isOpen: theme.isOpen,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggle: themeAction.toggleTheme,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport contactAction from \"./contactAction\";\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload.contact];\r\n};\r\nconst onDeleteContact = (state, action) => {\r\n  return state.filter((contact) => contact.id !== action.payload);\r\n};\r\nconst onFilterContact = (state, action) => {\r\n  return action.payload;\r\n};\r\n\r\nconst contacts = createReducer([], {\r\n  [contactAction.addContact]: onAddContact,\r\n  [contactAction.deleteContact]: onDeleteContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactAction.filterContact]: onFilterContact,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n\r\n// state.filter((contact) =>\r\n//   contact.name.toLowerCase().includes(filter.toLowerCase())\r\n// );\r\n\r\n// componentDidMount() {\r\n//   const contactsStorage = localStorage.getItem(\"contacts\");\r\n//   if (contactsStorage) {\r\n//     this.setState({ contacts: JSON.parse(contactsStorage) });\r\n//   }\r\n// }\r\n\r\n// componentDidUpdate(prevProps, prevState) {\r\n//   if (prevState.contacts !== this.state.contacts) {\r\n//     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n//   }\r\n// }\r\n\r\n// handleChangeFilter = ({ target: { value } }) =>\r\n//   this.setState({ filter: value });\r\n\r\n//   this.state.contacts.find(({ name }) => name === contact.name)\r\n//     ? alert(`${contact.name} already exists`)\r\n//     : this.setState((prev) => {\r\n//         return { contacts: [...prev.contacts, contact] };\r\n//       });\r\n// };\r\n\r\n// filterContact = () => {\r\n//   const { contacts, filter } = this.state;\r\n//   return contacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\r\n//   );\r\n// };\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport themeAction from \"./themeAction\";\r\n\r\nconst onToggle = (state, action) => {\r\n  return { ...state, isOpen: !state.isOpen };\r\n};\r\n\r\nconst themeReducer = createReducer(\r\n  { isOpen: false },\r\n  {\r\n    [themeAction.toggleTheme]: onToggle,\r\n  }\r\n);\r\n\r\nexport default themeReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactReducer from \"./contact/contactReducer\";\r\nimport themeReducer from \"./theme/themeReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n    theme: themeReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from 'react-redux'\r\nimport App from \"./components/app/App\";\r\nimport store from './redux/store'\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}