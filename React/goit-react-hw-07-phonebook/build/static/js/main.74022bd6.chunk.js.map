{"version":3,"sources":["components/contactList/ContactList.module.css","components/contactForm/form/Form.module.css","components/app/App.module.css","components/filter/Filter.module.css","redux/contact/contactAction.js","redux/contact/contactOperations.js","components/contactForm/form/Form.jsx","components/contactForm/ContactForm.jsx","components/contactList/contactListItem/ContactListItem.jsx","redux/contact/contactSelectors.js","components/contactList/ContactList.jsx","components/filter/Filter.jsx","redux/theme/themeAction.js","components/app/App.js","redux/contact/contactReducer.js","redux/theme/themeReducer.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","deleteContact","filterContact","axios","defaults","baseURL","addContact","name","number","dispatch","contactAction","post","then","data","catch","error","fetchContacts","get","removeContact","id","delete","form","styles","label","input","button","ContactForm","handleChange","handleSubmit","onSubmit","className","value","type","placeholder","onChange","state","target","setState","e","preventDefault","props","this","Form","Component","mapDispatchToProps","contactOperations","connect","listItem","phone","deleteButton","ContactListItem","contact","onClick","getContacts","contacts","getFilter","filter","loading","theme","isOpen","toLowerCase","includes","onDelete","onFilter","contactSelectors","list","map","key","handleFilterChange","toggleTheme","payload","dark","light","app","loader","App","onFetchContacts","isLoading","toggle","Switch","checked","color","height","width","length","themeAction","createReducer","action","combineReducers","themeReducer","store","configureStore","reducer","contactReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74022bd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2atzu\",\"listItem\":\"ContactList_listItem__lUv4b\",\"name\":\"ContactList_name__2_rhs\",\"phone\":\"ContactList_phone__37SzF\",\"deleteButton\":\"ContactList_deleteButton__2b5_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3kVBK\",\"label\":\"Form_label__mkyQB\",\"input\":\"Form_input__2gOw_\",\"button\":\"Form_button__kVP6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__dNNoM\",\"dark\":\"App_dark__2v9KZ\",\"light\":\"App_light__1KK8m\",\"loader\":\"App_loader__wz-6w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3JzXh\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"contact/ADD_REQUEST\");\r\nconst addContactSuccess = createAction(\"contact/ADD_SUCCESS\");\r\nconst addContactError = createAction(\"contact/ADD_ERROR\");\r\n\r\nconst fetchContactsRequest = createAction(\"contact/FETCH_REQUEST\");\r\nconst fetchContactsSuccess = createAction(\"contact/FETCH_SUCCESS\");\r\nconst fetchContactsError = createAction(\"contact/FETCH_ERROR\");\r\n\r\nconst removeContactRequest = createAction(\"contact/REMOVE_REQUEST\");\r\nconst removeContactSuccess = createAction(\"contact/REMOVE_SUCCESS\");\r\nconst removeContactError = createAction(\"contact/REMOVE_ERROR\");\r\n\r\nconst deleteContact = createAction(\"contact/DELETE_CONTACT\");\r\nconst filterContact = createAction(\"contact/FILTER_CONTACT\");\r\n\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n\r\n  deleteContact,\r\n  filterContact,\r\n};\r\n","import axios from \"axios\";\r\nimport contactAction from \"./contactAction\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:5000\";\r\n\r\n// add contact\r\nconst addContact = (name, number) => (dispatch) => {\r\n  dispatch(contactAction.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then(({ data }) => dispatch(contactAction.addContactSuccess(data)))\r\n    .catch((error) => dispatch(contactAction.addContactError(error)));\r\n};\r\n// fetch contact\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactAction.fetchContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactAction.fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(contactAction.fetchContactsError(error)));\r\n};\r\n// remove contact\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(contactAction.removeContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactAction.removeContactSuccess(id)))\r\n    .catch((error) => dispatch(contactAction.removeContactError(error)));\r\n};\r\n// export\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  removeContact,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Form.module.css\";\r\n\r\nconst { form, label, input, button } = styles;\r\n\r\nconst ContactForm = ({ handleChange, handleSubmit, name, number }) => {\r\n  return (\r\n    <>\r\n      <h2>Phonebook</h2>\r\n\r\n      <form onSubmit={handleSubmit} className={form}>\r\n        <label className={label}>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            value={name}\r\n            type=\"text\"\r\n            placeholder=\"name...\"\r\n            className={input}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={label}>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            value={number}\r\n            type=\"tel\"\r\n            placeholder=\"phone...\"\r\n            className={input}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button className={button} type=\"submit\">\r\n          add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactOperations from \"../../redux/contact/contactOperations\";\r\nimport Form from \"../contactForm/form/Form\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) =>\r\n    this.setState({ [name]: value });\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    name !== \"\" && number !== \"\" && this.props.onSubmit(name, number);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <Form\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n          name={name}\r\n          number={number}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onSubmit: contactOperations.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport styles from \"../ContactList.module.css\";\r\n\r\nconst { listItem, name, phone, deleteButton } = styles;\r\n\r\nconst ContactListItem = ({ contact, deleteContact }) => {\r\n  return (\r\n    <li className={listItem}>\r\n      <p className={name}>\r\n        <b>Name:</b>\r\n        {contact.name}\r\n      </p>\r\n      <p className={phone}>\r\n        <b>Phone:</b>\r\n        {contact.number}\r\n      </p>\r\n      <button\r\n        className={deleteButton}\r\n        type=\"button\"\r\n        onClick={() => deleteContact(contact.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","const getLoading = (state) => state.contacts.loading;\r\nconst getContacts = (state) => state.contacts.contacts;\r\nconst getTheme = (state) => state.theme.isOpen;\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getFilteredContacts = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state).toLowerCase();\r\n  return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\r\n};\r\n\r\nexport default {\r\n  getLoading,\r\n  getContacts,\r\n  getTheme,\r\n  getFilter,\r\n  getFilteredContacts,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport contactAction from \"../../redux/contact/contactAction\";\r\nimport contactOperations from \"../../redux/contact/contactOperations\";\r\nimport contactSelectors from \"../../redux/contact/contactSelectors\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDelete, onFilter }) => {\r\n  return (\r\n    <>\r\n      <h2>Contacts</h2>\r\n      <ul className={styles.list}>\r\n        {contacts.map((contact) => (\r\n          <ContactListItem\r\n            key={contact.id}\r\n            contact={contact}\r\n            deleteContact={() => onDelete(contact.id)}\r\n            filterContact={() => onFilter(contact.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactSelectors.getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onDelete: contactOperations.removeContact,\r\n  onFilter: contactAction.filterContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactAction from \"../../redux/contact/contactAction\";\r\nimport contactSelectors from \"../../redux/contact/contactSelectors\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst { filter } = styles;\r\n\r\nconst Filter = ({ handleFilterChange, value }) => {\r\n  return (\r\n    <>\r\n      <h2>Search</h2>\r\n      <input\r\n        className={filter}\r\n        value={value}\r\n        name=\"filter\"\r\n        type=\"tel\"\r\n        placeholder=\"find contacts by name...\"\r\n        onChange={(e) => handleFilterChange(e.target.value)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: contactSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  handleFilterChange: contactAction.filterContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst toggleTheme = createAction(\"theme/THEME_TOGGLE\", (theme, isOpen) => ({\r\n  payload: {\r\n    theme: {\r\n      isOpen,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default { toggleTheme };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Switch } from \"@material-ui/core\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport ContactForm from \"../contactForm/ContactForm\";\r\nimport ContactList from \"../contactList/ContactList\";\r\nimport Filter from \"../filter/Filter\";\r\n\r\nimport contactOperations from \"../../redux/contact/contactOperations\";\r\nimport contactSelectors from \"../../redux/contact/contactSelectors\";\r\nimport themeAction from \"../../redux/theme/themeAction\";\r\nimport styles from \"./App.module.css\";\r\n\r\nconst { dark, light, app, loader } = styles;\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts, isOpen, isLoading, toggle } = this.props;\r\n    return (\r\n      <>\r\n        <div className={isOpen ? dark : light}>\r\n          <Switch checked={isOpen} onChange={toggle} />\r\n          <div className={app}>\r\n            {isLoading ? (\r\n              <Loader\r\n                className={loader}\r\n                type=\"Oval\"\r\n                color=\"#1A237E\"\r\n                height={125}\r\n                width={125}\r\n              />\r\n            ) : (\r\n              <>\r\n                <ContactForm />\r\n                {contacts.length > 0 && (\r\n                  <>\r\n                    <Filter />\r\n                    <ContactList />\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: contactSelectors.getContacts(state),\r\n    isOpen: contactSelectors.getTheme(state),\r\n    isLoading: contactSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggle: themeAction.toggleTheme,\r\n  onFetchContacts: contactOperations.fetchContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport contactAction from \"./contactAction\";\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\nconst onDeleteContact = (state, action) => {\r\n  return state.filter((contact) => contact.id !== action.payload);\r\n};\r\nconst onFilterContact = (state, action) => {\r\n  return action.payload;\r\n};\r\n\r\nconst contacts = createReducer([], {\r\n  [contactAction.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactAction.addContactSuccess]: onAddContact,\r\n  [contactAction.removeContactSuccess]: onDeleteContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactAction.filterContact]: onFilterContact,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactAction.fetchContactsRequest]: () => true,\r\n  [contactAction.fetchContactsSuccess]: () => false,\r\n  [contactAction.fetchContactsError]: () => false,\r\n\r\n  [contactAction.addContactRequest]: () => true,\r\n  [contactAction.addContactSuccess]: () => false,\r\n  [contactAction.addContactError]: () => false,\r\n\r\n  [contactAction.removeContactRequest]: () => true,\r\n  [contactAction.removeContactSuccess]: () => false,\r\n  [contactAction.removeContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport themeAction from \"./themeAction\";\r\n\r\nconst onToggle = (state, action) => {\r\n  return { ...state, isOpen: !state.isOpen };\r\n};\r\n\r\nconst themeReducer = createReducer(\r\n  { isOpen: false },\r\n  {\r\n    [themeAction.toggleTheme]: onToggle,\r\n  }\r\n);\r\n\r\nexport default themeReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactReducer from \"./contact/contactReducer\";\r\nimport themeReducer from \"./theme/themeReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n    theme: themeReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./components/app/App\";\r\nimport store from \"./redux/store\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}